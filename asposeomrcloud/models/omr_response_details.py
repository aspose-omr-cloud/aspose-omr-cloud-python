# coding: utf-8
"""
Copyright (c) 2018 Aspose Pty Ltd. All Rights Reserved.

Licensed under the MIT (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

      https://github.com/aspose-omr-cloud/aspose-omr-cloud-python/blob/master/LICENSE

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



    Aspose.OMR for Cloud API Reference

    Aspose.OMR for Cloud helps performing optical mark recognition in the cloud

    OpenAPI spec version: 1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""
from pprint import pformat
from six import iteritems
import re


class OMRResponseDetails(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'task_messages': 'list[str]',
        'task_result': 'str',
        'recognition_statistics': 'list[RecognitionStatistics]'
    }

    attribute_map = {
        'task_messages': 'TaskMessages',
        'task_result': 'TaskResult',
        'recognition_statistics': 'RecognitionStatistics'
    }

    def __init__(self, task_messages=None, task_result=None, recognition_statistics=None):
        """
        OMRResponseDetails - a model defined in Swagger
        """

        self._task_messages = None
        self._task_result = None
        self._recognition_statistics = None
        self.discriminator = None

        if task_messages is not None:
          self.task_messages = task_messages
        if task_result is not None:
          self.task_result = task_result
        if recognition_statistics is not None:
          self.recognition_statistics = recognition_statistics

    @property
    def task_messages(self):
        """
        Gets the task_messages of this OMRResponseDetails.
        Warnings and other messages regarding task, etc.

        :return: The task_messages of this OMRResponseDetails.
        :rtype: list[str]
        """
        return self._task_messages

    @task_messages.setter
    def task_messages(self, task_messages):
        """
        Sets the task_messages of this OMRResponseDetails.
        Warnings and other messages regarding task, etc.

        :param task_messages: The task_messages of this OMRResponseDetails.
        :type: list[str]
        """

        self._task_messages = task_messages

    @property
    def task_result(self):
        """
        Gets the task_result of this OMRResponseDetails.
        Indicates if each particular task passed or failed,

        :return: The task_result of this OMRResponseDetails.
        :rtype: str
        """
        return self._task_result

    @task_result.setter
    def task_result(self, task_result):
        """
        Sets the task_result of this OMRResponseDetails.
        Indicates if each particular task passed or failed,

        :param task_result: The task_result of this OMRResponseDetails.
        :type: str
        """

        self._task_result = task_result

    @property
    def recognition_statistics(self):
        """
        Gets the recognition_statistics of this OMRResponseDetails.
        RecognitionStatistics

        :return: The recognition_statistics of this OMRResponseDetails.
        :rtype: list[RecognitionStatistics]
        """
        return self._recognition_statistics

    @recognition_statistics.setter
    def recognition_statistics(self, recognition_statistics):
        """
        Sets the recognition_statistics of this OMRResponseDetails.
        RecognitionStatistics

        :param recognition_statistics: The recognition_statistics of this OMRResponseDetails.
        :type: list[RecognitionStatistics]
        """

        self._recognition_statistics = recognition_statistics

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, OMRResponseDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
